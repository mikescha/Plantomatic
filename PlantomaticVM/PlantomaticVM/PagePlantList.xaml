<?xml version="1.0" encoding="utf-8" ?>
  <ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
               xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
               xmlns:plants="clr-namespace:PlantMan.Plant;assembly=Plant"
               xmlns:tools="clr-namespace:PlantomaticVM"
               xmlns:theplantlist="clr-namespace:PlantomaticVM;assembly=PlantomaticVM"
               x:Class="PlantomaticVM.PlantListPage"
               Title="Plants" 
               SizeChanged="OnPageSizeChanged"
               BindingContext="{Binding Source={x:Static Application.Current}, Path=AppData}">
    
    <ContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness" iOS="0, 20, 0, 0" WinPhone="0,5,5,10"/>
    </ContentPage.Padding>

    <ContentPage.Resources>
      <ResourceDictionary>
        <tools:ListToBoolConverter   x:Key="listToBoolConverter" /> 
        
        <tools:BoolToStringConverter x:Key="AddRemoveCartText" 
                                     TrueText="Remove from cart"
                                     FalseText="Add to cart"/>
          
        <tools:BoolToStringConverter x:Key="ColorIfInList" 
                                     TrueText="Green"
                                     FalseText="Black"/>
        </ResourceDictionary> 
    </ContentPage.Resources>
    
    <Grid x:Name="mainGrid">
      <Grid.RowDefinitions>
        <RowDefinition Height="0" /> <!--Hiding this for now-->
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="0" />
      </Grid.ColumnDefinitions>

    <!--TODO Am I going to have a title here? if not, delete this and update the page layout code
    <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="{Binding MasterViewModel.PlantList.State, StringFormat='Native Plants of {0}'}"
               FontSize="Large"
               HorizontalTextAlignment="Center" />
    -->
    
    <StackLayout Grid.Row="1" Grid.Column="0">
      <Label Text="{Binding MasterViewModel.PlantList.MyPlants.Count, StringFormat = '{0} plants matching your conditions'}"
             FontAttributes="Bold"
             TextColor="Gray"/>
    </StackLayout>
    
    <StackLayout Grid.Row="2" Grid.Column="0">
      <Label Text="No matching plants" 
             IsVisible="{Binding Source={x:Reference listView}, Path=ItemsSource, Converter={StaticResource listToBoolConverter}}"/>
      
      <!--The list of plants-->
      <ListView x:Name="listView" 
                ItemsSource="{Binding MasterViewModel.PlantList.MyPlants}" 
                Grid.Row="2" Grid.Column="0"
                ItemTapped="OnPlantSelected"
                SeparatorVisibility="None">
         <ListView.ItemTemplate>
            <DataTemplate>
              <ViewCell>
                <ViewCell.ContextActions>
                  <MenuItem Text="{Binding InCart, Converter={StaticResource AddRemoveCartText}}" 
                            Clicked="OnToggleCartMenuClicked"/> 
                </ViewCell.ContextActions>                                                        
                <StackLayout BackgroundColor="#f9f9f9"
                             Orientation="Vertical"
                             Padding="3">
                    <!--TODO This changes label color if the plant is in the list. Decide if this is what we want-->
                    <Label Text="{Binding Plant.Name}"
                           TextColor="{Binding InCart, Converter={StaticResource ColorIfInList}}" /> 
                </StackLayout>
              </ViewCell>
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>
      </StackLayout>
      
      <!--The detail that shows when a plant is selected-->
        <ScrollView x:Name="detailLayout" Grid.Row="3" Grid.Column="0" >
            <StackLayout Padding="5" 
                   BindingContext="{Binding Source={x:Reference listView}, Path=SelectedItem}" 
                   HorizontalOptions="StartAndExpand" VerticalOptions="Start" Orientation="Vertical" Spacing="5">
                <StackLayout.Resources>
                    <ResourceDictionary>
                        <Style TargetType="Label">
                            <Setter Property="Font" Value="Micro" />
                            <Setter Property="TextColor" Value="Black" />
                        </Style>
                    </ResourceDictionary>
                </StackLayout.Resources>

                <!--At this point, the context of the binding is the selected item. So, all the labels can just point to specific fields.-->
                <Label Text="{Binding Plant.Name}" FontSize="Medium"/>
                <Label Text="{Binding Plant.ScientificName}" FontAttributes="Italic"/>
                <Label Text="{Binding Plant.NotableVisuals}"/>
                <Label Text="{Binding Plant.Notes}"/>
                <Label Text="{Binding Plant.PlantTypes}"/>
                <Label Text="{Binding Plant.MinWinterTempF.Value, StringFormat='Minimum low temp: {0}'}" />
                <Label Text="{Binding Plant.SunRequirements, StringFormat='Sun requirements: {0}'}" />
                <Label Text="{Binding Plant.FloweringMonths, StringFormat='Flowering months: {0}'}" />
                <Label Text="{Binding Plant.MaxWidth.Value, StringFormat='Maximum width: {0} ft'}"  />
                <Label Text="{Binding Plant.MaxHeight.Value, StringFormat='Maximum height: {0} ft'}"  />
                <Label x:Name="MoreInfoURLLabel" Text="More info..." TextColor="Blue" IsVisible="false">
                    <!--invisible by default so it doesn't show until there's a selection-->
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Tapped="OnMoreInfoTapped"/>
                    </Label.GestureRecognizers>
                </Label>
                <StackLayout Orientation="Horizontal" 
                             HorizontalOptions="StartAndExpand">
                    <Label x:Name="EntryBoxLabel" Text="How many do you want?" IsVisible="False" />
                    <Entry x:Name="EntryBox" Text="{Binding Count, Mode=TwoWay}"  Keyboard="Numeric" IsVisible="False" />    
                </StackLayout>
                
                
                <!-- If I can figure out how to do this as part of the viewmodel with binding, then instead of Clicked I would have 
                 something like, Command="{Binding ToggleCartStatus}"  
                
                Do I need this any more?
                
                <tools:BoolToStringConverter x:Key="ShowListText" 
                                     TrueText="Show matching plants"
                                     FalseText="Show shopping list"/>

                <Button x:Name="AddToCartButton" Text="{Binding InCart, Converter={StaticResource AddRemoveCartText}}" 
                    BorderWidth="1"     
                    Clicked="OnToggleCartButtonClicked"
                    IsVisible="false">
                    <Button.BackgroundColor>
                        <OnPlatform x:TypeArguments="Color" Android="#404040" />
                    </Button.BackgroundColor>
                    <Button.BorderColor>
                        <OnPlatform x:TypeArguments="Color" Android="White" WinPhone="Black" />
                    </Button.BorderColor>
                </Button>
-->
            </StackLayout>

        </ScrollView>

    </Grid>

</ContentPage>